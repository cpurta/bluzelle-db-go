// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: crud/tx.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// this line is used by starport scaffolding # proto/tx/message
type MsgCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *MsgCount) Reset() {
	*x = MsgCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCount) ProtoMessage() {}

func (x *MsgCount) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCount.ProtoReflect.Descriptor instead.
func (*MsgCount) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgCount) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCount) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type MsgCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *MsgCountResponse) Reset() {
	*x = MsgCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCountResponse) ProtoMessage() {}

func (x *MsgCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCountResponse.ProtoReflect.Descriptor instead.
func (*MsgCountResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{1}
}

func (x *MsgCountResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type MsgRenewLeasesAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Lease   *Lease `protobuf:"bytes,3,opt,name=lease,proto3" json:"lease,omitempty"`
}

func (x *MsgRenewLeasesAll) Reset() {
	*x = MsgRenewLeasesAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRenewLeasesAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRenewLeasesAll) ProtoMessage() {}

func (x *MsgRenewLeasesAll) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRenewLeasesAll.ProtoReflect.Descriptor instead.
func (*MsgRenewLeasesAll) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgRenewLeasesAll) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRenewLeasesAll) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgRenewLeasesAll) GetLease() *Lease {
	if x != nil {
		return x.Lease
	}
	return nil
}

type MsgRenewLeasesAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRenewLeasesAllResponse) Reset() {
	*x = MsgRenewLeasesAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRenewLeasesAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRenewLeasesAllResponse) ProtoMessage() {}

func (x *MsgRenewLeasesAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRenewLeasesAllResponse.ProtoReflect.Descriptor instead.
func (*MsgRenewLeasesAllResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{3}
}

type MsgRenewLease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key     string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Lease   *Lease `protobuf:"bytes,4,opt,name=lease,proto3" json:"lease,omitempty"`
}

func (x *MsgRenewLease) Reset() {
	*x = MsgRenewLease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRenewLease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRenewLease) ProtoMessage() {}

func (x *MsgRenewLease) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRenewLease.ProtoReflect.Descriptor instead.
func (*MsgRenewLease) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgRenewLease) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRenewLease) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgRenewLease) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MsgRenewLease) GetLease() *Lease {
	if x != nil {
		return x.Lease
	}
	return nil
}

type MsgRenewLeaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRenewLeaseResponse) Reset() {
	*x = MsgRenewLeaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRenewLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRenewLeaseResponse) ProtoMessage() {}

func (x *MsgRenewLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRenewLeaseResponse.ProtoReflect.Descriptor instead.
func (*MsgRenewLeaseResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{5}
}

type MsgGetNShortestLeases struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Num     uint32 `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *MsgGetNShortestLeases) Reset() {
	*x = MsgGetNShortestLeases{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetNShortestLeases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetNShortestLeases) ProtoMessage() {}

func (x *MsgGetNShortestLeases) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetNShortestLeases.ProtoReflect.Descriptor instead.
func (*MsgGetNShortestLeases) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgGetNShortestLeases) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgGetNShortestLeases) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgGetNShortestLeases) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type MsgGetNShortestLeasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	KeyLeases []*KeyLease `protobuf:"bytes,2,rep,name=keyLeases,proto3" json:"keyLeases,omitempty"`
}

func (x *MsgGetNShortestLeasesResponse) Reset() {
	*x = MsgGetNShortestLeasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetNShortestLeasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetNShortestLeasesResponse) ProtoMessage() {}

func (x *MsgGetNShortestLeasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetNShortestLeasesResponse.ProtoReflect.Descriptor instead.
func (*MsgGetNShortestLeasesResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{7}
}

func (x *MsgGetNShortestLeasesResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgGetNShortestLeasesResponse) GetKeyLeases() []*KeyLease {
	if x != nil {
		return x.KeyLeases
	}
	return nil
}

type MsgKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator    string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid       string         `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Pagination *PagingRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *MsgKeys) Reset() {
	*x = MsgKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgKeys) ProtoMessage() {}

func (x *MsgKeys) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgKeys.ProtoReflect.Descriptor instead.
func (*MsgKeys) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgKeys) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgKeys) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgKeys) GetPagination() *PagingRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type MsgKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys       []string        `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Pagination *PagingResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *MsgKeysResponse) Reset() {
	*x = MsgKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgKeysResponse) ProtoMessage() {}

func (x *MsgKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgKeysResponse.ProtoReflect.Descriptor instead.
func (*MsgKeysResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{9}
}

func (x *MsgKeysResponse) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *MsgKeysResponse) GetPagination() *PagingResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type MsgRename struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key     string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	NewKey  string `protobuf:"bytes,4,opt,name=newKey,proto3" json:"newKey,omitempty"`
}

func (x *MsgRename) Reset() {
	*x = MsgRename{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRename) ProtoMessage() {}

func (x *MsgRename) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRename.ProtoReflect.Descriptor instead.
func (*MsgRename) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{10}
}

func (x *MsgRename) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRename) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgRename) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MsgRename) GetNewKey() string {
	if x != nil {
		return x.NewKey
	}
	return ""
}

type MsgRenameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgRenameResponse) Reset() {
	*x = MsgRenameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRenameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRenameResponse) ProtoMessage() {}

func (x *MsgRenameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRenameResponse.ProtoReflect.Descriptor instead.
func (*MsgRenameResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{11}
}

type MsgMultiUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator   string           `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid      string           `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	KeyValues []*KeyValueLease `protobuf:"bytes,3,rep,name=keyValues,proto3" json:"keyValues,omitempty"`
}

func (x *MsgMultiUpdate) Reset() {
	*x = MsgMultiUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMultiUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMultiUpdate) ProtoMessage() {}

func (x *MsgMultiUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMultiUpdate.ProtoReflect.Descriptor instead.
func (*MsgMultiUpdate) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{12}
}

func (x *MsgMultiUpdate) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgMultiUpdate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgMultiUpdate) GetKeyValues() []*KeyValueLease {
	if x != nil {
		return x.KeyValues
	}
	return nil
}

type MsgMultiUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgMultiUpdateResponse) Reset() {
	*x = MsgMultiUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMultiUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMultiUpdateResponse) ProtoMessage() {}

func (x *MsgMultiUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMultiUpdateResponse.ProtoReflect.Descriptor instead.
func (*MsgMultiUpdateResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{13}
}

type MsgDeleteAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *MsgDeleteAll) Reset() {
	*x = MsgDeleteAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteAll) ProtoMessage() {}

func (x *MsgDeleteAll) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteAll.ProtoReflect.Descriptor instead.
func (*MsgDeleteAll) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{14}
}

func (x *MsgDeleteAll) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDeleteAll) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type MsgDeleteAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteAllResponse) Reset() {
	*x = MsgDeleteAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteAllResponse) ProtoMessage() {}

func (x *MsgDeleteAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteAllResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteAllResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{15}
}

type MsgKeyValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator    string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid       string         `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Pagination *PagingRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *MsgKeyValues) Reset() {
	*x = MsgKeyValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgKeyValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgKeyValues) ProtoMessage() {}

func (x *MsgKeyValues) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgKeyValues.ProtoReflect.Descriptor instead.
func (*MsgKeyValues) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{16}
}

func (x *MsgKeyValues) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgKeyValues) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgKeyValues) GetPagination() *PagingRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type MsgKeyValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyValues  []*KeyValue     `protobuf:"bytes,1,rep,name=keyValues,proto3" json:"keyValues,omitempty"`
	Pagination *PagingResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *MsgKeyValuesResponse) Reset() {
	*x = MsgKeyValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgKeyValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgKeyValuesResponse) ProtoMessage() {}

func (x *MsgKeyValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgKeyValuesResponse.ProtoReflect.Descriptor instead.
func (*MsgKeyValuesResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{17}
}

func (x *MsgKeyValuesResponse) GetKeyValues() []*KeyValue {
	if x != nil {
		return x.KeyValues
	}
	return nil
}

func (x *MsgKeyValuesResponse) GetPagination() *PagingResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type MsgHas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key     string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *MsgHas) Reset() {
	*x = MsgHas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgHas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgHas) ProtoMessage() {}

func (x *MsgHas) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgHas.ProtoReflect.Descriptor instead.
func (*MsgHas) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{18}
}

func (x *MsgHas) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgHas) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgHas) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type MsgHasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Has bool `protobuf:"varint,1,opt,name=has,proto3" json:"has,omitempty"`
}

func (x *MsgHasResponse) Reset() {
	*x = MsgHasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgHasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgHasResponse) ProtoMessage() {}

func (x *MsgHasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgHasResponse.ProtoReflect.Descriptor instead.
func (*MsgHasResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{19}
}

func (x *MsgHasResponse) GetHas() bool {
	if x != nil {
		return x.Has
	}
	return false
}

type MsgGetLease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key     string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *MsgGetLease) Reset() {
	*x = MsgGetLease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetLease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetLease) ProtoMessage() {}

func (x *MsgGetLease) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetLease.ProtoReflect.Descriptor instead.
func (*MsgGetLease) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{20}
}

func (x *MsgGetLease) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgGetLease) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgGetLease) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type MsgGetLeaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Seconds uint32 `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *MsgGetLeaseResponse) Reset() {
	*x = MsgGetLeaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetLeaseResponse) ProtoMessage() {}

func (x *MsgGetLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetLeaseResponse.ProtoReflect.Descriptor instead.
func (*MsgGetLeaseResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{21}
}

func (x *MsgGetLeaseResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgGetLeaseResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MsgGetLeaseResponse) GetSeconds() uint32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type MsgRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key     string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *MsgRead) Reset() {
	*x = MsgRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRead) ProtoMessage() {}

func (x *MsgRead) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRead.ProtoReflect.Descriptor instead.
func (*MsgRead) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{22}
}

func (x *MsgRead) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgRead) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgRead) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type MsgReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Key   string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *MsgReadResponse) Reset() {
	*x = MsgReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgReadResponse) ProtoMessage() {}

func (x *MsgReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgReadResponse.ProtoReflect.Descriptor instead.
func (*MsgReadResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{23}
}

func (x *MsgReadResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MsgReadResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type MsgUpsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid     string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key      string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value    []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Lease    *Lease `protobuf:"bytes,5,opt,name=lease,proto3" json:"lease,omitempty"`
	Metadata []byte `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *MsgUpsert) Reset() {
	*x = MsgUpsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpsert) ProtoMessage() {}

func (x *MsgUpsert) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpsert.ProtoReflect.Descriptor instead.
func (*MsgUpsert) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{24}
}

func (x *MsgUpsert) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpsert) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgUpsert) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MsgUpsert) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MsgUpsert) GetLease() *Lease {
	if x != nil {
		return x.Lease
	}
	return nil
}

func (x *MsgUpsert) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type MsgUpsertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpsertResponse) Reset() {
	*x = MsgUpsertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpsertResponse) ProtoMessage() {}

func (x *MsgUpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpsertResponse.ProtoReflect.Descriptor instead.
func (*MsgUpsertResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{25}
}

type MsgCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid     string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key      string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value    []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Lease    *Lease `protobuf:"bytes,5,opt,name=lease,proto3" json:"lease,omitempty"`
	Metadata []byte `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *MsgCreate) Reset() {
	*x = MsgCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreate) ProtoMessage() {}

func (x *MsgCreate) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreate.ProtoReflect.Descriptor instead.
func (*MsgCreate) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{26}
}

func (x *MsgCreate) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgCreate) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MsgCreate) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MsgCreate) GetLease() *Lease {
	if x != nil {
		return x.Lease
	}
	return nil
}

func (x *MsgCreate) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type MsgCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCreateResponse) Reset() {
	*x = MsgCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateResponse) ProtoMessage() {}

func (x *MsgCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{27}
}

type MsgUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid     string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key      string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value    []byte `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Lease    *Lease `protobuf:"bytes,5,opt,name=lease,proto3" json:"lease,omitempty"`
	Metadata []byte `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *MsgUpdate) Reset() {
	*x = MsgUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdate) ProtoMessage() {}

func (x *MsgUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdate.ProtoReflect.Descriptor instead.
func (*MsgUpdate) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{28}
}

func (x *MsgUpdate) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgUpdate) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgUpdate) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MsgUpdate) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MsgUpdate) GetLease() *Lease {
	if x != nil {
		return x.Lease
	}
	return nil
}

func (x *MsgUpdate) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type MsgUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgUpdateResponse) Reset() {
	*x = MsgUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateResponse) ProtoMessage() {}

func (x *MsgUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateResponse.ProtoReflect.Descriptor instead.
func (*MsgUpdateResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{29}
}

type MsgDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Uuid    string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key     string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *MsgDelete) Reset() {
	*x = MsgDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDelete) ProtoMessage() {}

func (x *MsgDelete) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDelete.ProtoReflect.Descriptor instead.
func (*MsgDelete) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{30}
}

func (x *MsgDelete) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgDelete) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MsgDelete) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type MsgDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteResponse) Reset() {
	*x = MsgDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_tx_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteResponse) ProtoMessage() {}

func (x *MsgDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_tx_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteResponse) Descriptor() ([]byte, []int) {
	return file_crud_tx_proto_rawDescGZIP(), []int{31}
}

var File_crud_tx_proto protoreflect.FileDescriptor

var file_crud_tx_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x14, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d,
	0x2e, 0x63, 0x72, 0x75, 0x64, 0x1a, 0x10, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x72,
	0x75, 0x64, 0x2f, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x38, 0x0a, 0x08, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x10, 0x4d, 0x73, 0x67,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x74, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x41, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65,
	0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4c, 0x65, 0x61,
	0x73, 0x65, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x41, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c,
	0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x4e, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x71, 0x0a,
	0x1d, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x4e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x73, 0x74,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65,
	0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4b, 0x65, 0x79,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73,
	0x22, 0x7c, 0x0a, 0x07, 0x4d, 0x73, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e,
	0x63, 0x72, 0x75, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6b,
	0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6c, 0x75, 0x7a,
	0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x63, 0x0a, 0x09, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x65, 0x77, 0x4b,
	0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79,
	0x22, 0x13, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x6c, 0x75, 0x7a,
	0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64,
	0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x09,
	0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x73, 0x67,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x0c, 0x4d, 0x73,
	0x67, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62,
	0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63,
	0x72, 0x75, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01,
	0x0a, 0x14, 0x4d, 0x73, 0x67, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6c, 0x75, 0x7a,
	0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64,
	0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65,
	0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x06, 0x4d, 0x73,
	0x67, 0x48, 0x61, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x22, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x48, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x68, 0x61, 0x73, 0x22, 0x4d, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x55, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x49,
	0x0a, 0x07, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x39, 0x0a, 0x0f, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0xb0, 0x01, 0x0a, 0x09, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x73, 0x65,
	0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c,
	0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x13, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb0, 0x01, 0x0a,
	0x09, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x31, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x05, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x13, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x09, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c,
	0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x13, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x09,
	0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x4d, 0x73, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9c,
	0x0b, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x4f, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1e, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0x26, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0e, 0x52, 0x65, 0x6e, 0x65, 0x77,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x41, 0x6c, 0x6c, 0x12, 0x27, 0x2e, 0x62, 0x6c, 0x75, 0x7a,
	0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64,
	0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x41,
	0x6c, 0x6c, 0x1a, 0x2f, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0a, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x12, 0x23, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72,
	0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6e, 0x65,
	0x77, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x1a, 0x2b, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c,
	0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x65, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x62, 0x6c, 0x75, 0x7a,
	0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64,
	0x2e, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x4e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x73, 0x74,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x1a, 0x33, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c,
	0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73,
	0x67, 0x47, 0x65, 0x74, 0x4e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x61,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x4b,
	0x65, 0x79, 0x73, 0x12, 0x1d, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63,
	0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x4b, 0x65,
	0x79, 0x73, 0x1a, 0x25, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x06, 0x52, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63,
	0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x27, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e,
	0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a,
	0x0b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x62,
	0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63,
	0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x1a, 0x2c, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5b, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x22, 0x2e,
	0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e,
	0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x6c, 0x1a, 0x2a, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72,
	0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a,
	0x09, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x62, 0x6c, 0x75,
	0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75,
	0x64, 0x2e, 0x4d, 0x73, 0x67, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x2a,
	0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d,
	0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x03, 0x48, 0x61,
	0x73, 0x12, 0x1c, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72,
	0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x48, 0x61, 0x73, 0x1a,
	0x24, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x48, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x12, 0x21, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72,
	0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x4c,
	0x65, 0x61, 0x73, 0x65, 0x1a, 0x29, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e,
	0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4c, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1d, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c,
	0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x61, 0x64, 0x1a, 0x25, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c,
	0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x06, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x12, 0x1f, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c,
	0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d,
	0x73, 0x67, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65,
	0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e,
	0x4d, 0x73, 0x67, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x52, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x62, 0x6c,
	0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72,
	0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x27, 0x2e, 0x62,
	0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63,
	0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x1a, 0x27, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69,
	0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63,
	0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x1a, 0x27, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e,
	0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4d, 0x73, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x29, 0x5a,
	0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c, 0x75, 0x7a,
	0x65, 0x6c, 0x6c, 0x65, 0x2f, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2f, 0x78, 0x2f, 0x63, 0x72,
	0x75, 0x64, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crud_tx_proto_rawDescOnce sync.Once
	file_crud_tx_proto_rawDescData = file_crud_tx_proto_rawDesc
)

func file_crud_tx_proto_rawDescGZIP() []byte {
	file_crud_tx_proto_rawDescOnce.Do(func() {
		file_crud_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_crud_tx_proto_rawDescData)
	})
	return file_crud_tx_proto_rawDescData
}

var file_crud_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_crud_tx_proto_goTypes = []interface{}{
	(*MsgCount)(nil),                      // 0: bluzelle.curium.crud.MsgCount
	(*MsgCountResponse)(nil),              // 1: bluzelle.curium.crud.MsgCountResponse
	(*MsgRenewLeasesAll)(nil),             // 2: bluzelle.curium.crud.MsgRenewLeasesAll
	(*MsgRenewLeasesAllResponse)(nil),     // 3: bluzelle.curium.crud.MsgRenewLeasesAllResponse
	(*MsgRenewLease)(nil),                 // 4: bluzelle.curium.crud.MsgRenewLease
	(*MsgRenewLeaseResponse)(nil),         // 5: bluzelle.curium.crud.MsgRenewLeaseResponse
	(*MsgGetNShortestLeases)(nil),         // 6: bluzelle.curium.crud.MsgGetNShortestLeases
	(*MsgGetNShortestLeasesResponse)(nil), // 7: bluzelle.curium.crud.MsgGetNShortestLeasesResponse
	(*MsgKeys)(nil),                       // 8: bluzelle.curium.crud.MsgKeys
	(*MsgKeysResponse)(nil),               // 9: bluzelle.curium.crud.MsgKeysResponse
	(*MsgRename)(nil),                     // 10: bluzelle.curium.crud.MsgRename
	(*MsgRenameResponse)(nil),             // 11: bluzelle.curium.crud.MsgRenameResponse
	(*MsgMultiUpdate)(nil),                // 12: bluzelle.curium.crud.MsgMultiUpdate
	(*MsgMultiUpdateResponse)(nil),        // 13: bluzelle.curium.crud.MsgMultiUpdateResponse
	(*MsgDeleteAll)(nil),                  // 14: bluzelle.curium.crud.MsgDeleteAll
	(*MsgDeleteAllResponse)(nil),          // 15: bluzelle.curium.crud.MsgDeleteAllResponse
	(*MsgKeyValues)(nil),                  // 16: bluzelle.curium.crud.MsgKeyValues
	(*MsgKeyValuesResponse)(nil),          // 17: bluzelle.curium.crud.MsgKeyValuesResponse
	(*MsgHas)(nil),                        // 18: bluzelle.curium.crud.MsgHas
	(*MsgHasResponse)(nil),                // 19: bluzelle.curium.crud.MsgHasResponse
	(*MsgGetLease)(nil),                   // 20: bluzelle.curium.crud.MsgGetLease
	(*MsgGetLeaseResponse)(nil),           // 21: bluzelle.curium.crud.MsgGetLeaseResponse
	(*MsgRead)(nil),                       // 22: bluzelle.curium.crud.MsgRead
	(*MsgReadResponse)(nil),               // 23: bluzelle.curium.crud.MsgReadResponse
	(*MsgUpsert)(nil),                     // 24: bluzelle.curium.crud.MsgUpsert
	(*MsgUpsertResponse)(nil),             // 25: bluzelle.curium.crud.MsgUpsertResponse
	(*MsgCreate)(nil),                     // 26: bluzelle.curium.crud.MsgCreate
	(*MsgCreateResponse)(nil),             // 27: bluzelle.curium.crud.MsgCreateResponse
	(*MsgUpdate)(nil),                     // 28: bluzelle.curium.crud.MsgUpdate
	(*MsgUpdateResponse)(nil),             // 29: bluzelle.curium.crud.MsgUpdateResponse
	(*MsgDelete)(nil),                     // 30: bluzelle.curium.crud.MsgDelete
	(*MsgDeleteResponse)(nil),             // 31: bluzelle.curium.crud.MsgDeleteResponse
	(*Lease)(nil),                         // 32: bluzelle.curium.crud.Lease
	(*KeyLease)(nil),                      // 33: bluzelle.curium.crud.KeyLease
	(*PagingRequest)(nil),                 // 34: bluzelle.curium.crud.PagingRequest
	(*PagingResponse)(nil),                // 35: bluzelle.curium.crud.PagingResponse
	(*KeyValueLease)(nil),                 // 36: bluzelle.curium.crud.KeyValueLease
	(*KeyValue)(nil),                      // 37: bluzelle.curium.crud.KeyValue
}
var file_crud_tx_proto_depIdxs = []int32{
	32, // 0: bluzelle.curium.crud.MsgRenewLeasesAll.lease:type_name -> bluzelle.curium.crud.Lease
	32, // 1: bluzelle.curium.crud.MsgRenewLease.lease:type_name -> bluzelle.curium.crud.Lease
	33, // 2: bluzelle.curium.crud.MsgGetNShortestLeasesResponse.keyLeases:type_name -> bluzelle.curium.crud.KeyLease
	34, // 3: bluzelle.curium.crud.MsgKeys.pagination:type_name -> bluzelle.curium.crud.PagingRequest
	35, // 4: bluzelle.curium.crud.MsgKeysResponse.pagination:type_name -> bluzelle.curium.crud.PagingResponse
	36, // 5: bluzelle.curium.crud.MsgMultiUpdate.keyValues:type_name -> bluzelle.curium.crud.KeyValueLease
	34, // 6: bluzelle.curium.crud.MsgKeyValues.pagination:type_name -> bluzelle.curium.crud.PagingRequest
	37, // 7: bluzelle.curium.crud.MsgKeyValuesResponse.keyValues:type_name -> bluzelle.curium.crud.KeyValue
	35, // 8: bluzelle.curium.crud.MsgKeyValuesResponse.pagination:type_name -> bluzelle.curium.crud.PagingResponse
	32, // 9: bluzelle.curium.crud.MsgUpsert.lease:type_name -> bluzelle.curium.crud.Lease
	32, // 10: bluzelle.curium.crud.MsgCreate.lease:type_name -> bluzelle.curium.crud.Lease
	32, // 11: bluzelle.curium.crud.MsgUpdate.lease:type_name -> bluzelle.curium.crud.Lease
	0,  // 12: bluzelle.curium.crud.Msg.Count:input_type -> bluzelle.curium.crud.MsgCount
	2,  // 13: bluzelle.curium.crud.Msg.RenewLeasesAll:input_type -> bluzelle.curium.crud.MsgRenewLeasesAll
	4,  // 14: bluzelle.curium.crud.Msg.RenewLease:input_type -> bluzelle.curium.crud.MsgRenewLease
	6,  // 15: bluzelle.curium.crud.Msg.GetNShortestLeases:input_type -> bluzelle.curium.crud.MsgGetNShortestLeases
	8,  // 16: bluzelle.curium.crud.Msg.Keys:input_type -> bluzelle.curium.crud.MsgKeys
	10, // 17: bluzelle.curium.crud.Msg.Rename:input_type -> bluzelle.curium.crud.MsgRename
	12, // 18: bluzelle.curium.crud.Msg.MultiUpdate:input_type -> bluzelle.curium.crud.MsgMultiUpdate
	14, // 19: bluzelle.curium.crud.Msg.DeleteAll:input_type -> bluzelle.curium.crud.MsgDeleteAll
	16, // 20: bluzelle.curium.crud.Msg.KeyValues:input_type -> bluzelle.curium.crud.MsgKeyValues
	18, // 21: bluzelle.curium.crud.Msg.Has:input_type -> bluzelle.curium.crud.MsgHas
	20, // 22: bluzelle.curium.crud.Msg.GetLease:input_type -> bluzelle.curium.crud.MsgGetLease
	22, // 23: bluzelle.curium.crud.Msg.Read:input_type -> bluzelle.curium.crud.MsgRead
	24, // 24: bluzelle.curium.crud.Msg.Upsert:input_type -> bluzelle.curium.crud.MsgUpsert
	26, // 25: bluzelle.curium.crud.Msg.Create:input_type -> bluzelle.curium.crud.MsgCreate
	28, // 26: bluzelle.curium.crud.Msg.Update:input_type -> bluzelle.curium.crud.MsgUpdate
	30, // 27: bluzelle.curium.crud.Msg.Delete:input_type -> bluzelle.curium.crud.MsgDelete
	1,  // 28: bluzelle.curium.crud.Msg.Count:output_type -> bluzelle.curium.crud.MsgCountResponse
	3,  // 29: bluzelle.curium.crud.Msg.RenewLeasesAll:output_type -> bluzelle.curium.crud.MsgRenewLeasesAllResponse
	5,  // 30: bluzelle.curium.crud.Msg.RenewLease:output_type -> bluzelle.curium.crud.MsgRenewLeaseResponse
	7,  // 31: bluzelle.curium.crud.Msg.GetNShortestLeases:output_type -> bluzelle.curium.crud.MsgGetNShortestLeasesResponse
	9,  // 32: bluzelle.curium.crud.Msg.Keys:output_type -> bluzelle.curium.crud.MsgKeysResponse
	11, // 33: bluzelle.curium.crud.Msg.Rename:output_type -> bluzelle.curium.crud.MsgRenameResponse
	13, // 34: bluzelle.curium.crud.Msg.MultiUpdate:output_type -> bluzelle.curium.crud.MsgMultiUpdateResponse
	15, // 35: bluzelle.curium.crud.Msg.DeleteAll:output_type -> bluzelle.curium.crud.MsgDeleteAllResponse
	17, // 36: bluzelle.curium.crud.Msg.KeyValues:output_type -> bluzelle.curium.crud.MsgKeyValuesResponse
	19, // 37: bluzelle.curium.crud.Msg.Has:output_type -> bluzelle.curium.crud.MsgHasResponse
	21, // 38: bluzelle.curium.crud.Msg.GetLease:output_type -> bluzelle.curium.crud.MsgGetLeaseResponse
	23, // 39: bluzelle.curium.crud.Msg.Read:output_type -> bluzelle.curium.crud.MsgReadResponse
	25, // 40: bluzelle.curium.crud.Msg.Upsert:output_type -> bluzelle.curium.crud.MsgUpsertResponse
	27, // 41: bluzelle.curium.crud.Msg.Create:output_type -> bluzelle.curium.crud.MsgCreateResponse
	29, // 42: bluzelle.curium.crud.Msg.Update:output_type -> bluzelle.curium.crud.MsgUpdateResponse
	31, // 43: bluzelle.curium.crud.Msg.Delete:output_type -> bluzelle.curium.crud.MsgDeleteResponse
	28, // [28:44] is the sub-list for method output_type
	12, // [12:28] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_crud_tx_proto_init() }
func file_crud_tx_proto_init() {
	if File_crud_tx_proto != nil {
		return
	}
	file_crud_lease_proto_init()
	file_crud_KeyValue_proto_init()
	file_crud_Paging_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_crud_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRenewLeasesAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRenewLeasesAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRenewLease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRenewLeaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetNShortestLeases); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetNShortestLeasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRename); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRenameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMultiUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMultiUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgKeyValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgKeyValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgHas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgHasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetLease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetLeaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpsertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_tx_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crud_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crud_tx_proto_goTypes,
		DependencyIndexes: file_crud_tx_proto_depIdxs,
		MessageInfos:      file_crud_tx_proto_msgTypes,
	}.Build()
	File_crud_tx_proto = out.File
	file_crud_tx_proto_rawDesc = nil
	file_crud_tx_proto_goTypes = nil
	file_crud_tx_proto_depIdxs = nil
}
