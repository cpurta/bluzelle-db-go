// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: crud/query.proto

package types

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *QueryFileRequest) Reset() {
	*x = QueryFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFileRequest) ProtoMessage() {}

func (x *QueryFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFileRequest.ProtoReflect.Descriptor instead.
func (*QueryFileRequest) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryFileRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QueryFileRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type QueryFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key  string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *QueryFileResponse) Reset() {
	*x = QueryFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFileResponse) ProtoMessage() {}

func (x *QueryFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFileResponse.ProtoReflect.Descriptor instead.
func (*QueryFileResponse) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryFileResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *QueryFileResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QueryFileResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type QueryKeyValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string         `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Pagination *PagingRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryKeyValuesRequest) Reset() {
	*x = QueryKeyValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryKeyValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeyValuesRequest) ProtoMessage() {}

func (x *QueryKeyValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeyValuesRequest.ProtoReflect.Descriptor instead.
func (*QueryKeyValuesRequest) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{2}
}

func (x *QueryKeyValuesRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QueryKeyValuesRequest) GetPagination() *PagingRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryKeyValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyValues  []*KeyValue     `protobuf:"bytes,1,rep,name=keyValues,proto3" json:"keyValues,omitempty"`
	Pagination *PagingResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryKeyValuesResponse) Reset() {
	*x = QueryKeyValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryKeyValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeyValuesResponse) ProtoMessage() {}

func (x *QueryKeyValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeyValuesResponse.ProtoReflect.Descriptor instead.
func (*QueryKeyValuesResponse) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryKeyValuesResponse) GetKeyValues() []*KeyValue {
	if x != nil {
		return x.KeyValues
	}
	return nil
}

func (x *QueryKeyValuesResponse) GetPagination() *PagingResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *QueryReadRequest) Reset() {
	*x = QueryReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReadRequest) ProtoMessage() {}

func (x *QueryReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReadRequest.ProtoReflect.Descriptor instead.
func (*QueryReadRequest) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{4}
}

func (x *QueryReadRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QueryReadRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type QueryReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *QueryReadResponse) Reset() {
	*x = QueryReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReadResponse) ProtoMessage() {}

func (x *QueryReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReadResponse.ProtoReflect.Descriptor instead.
func (*QueryReadResponse) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{5}
}

func (x *QueryReadResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type QueryKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string         `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Pagination *PagingRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryKeysRequest) Reset() {
	*x = QueryKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeysRequest) ProtoMessage() {}

func (x *QueryKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeysRequest.ProtoReflect.Descriptor instead.
func (*QueryKeysRequest) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{6}
}

func (x *QueryKeysRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QueryKeysRequest) GetPagination() *PagingRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys       []string        `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Pagination *PagingResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryKeysResponse) Reset() {
	*x = QueryKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKeysResponse) ProtoMessage() {}

func (x *QueryKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKeysResponse.ProtoReflect.Descriptor instead.
func (*QueryKeysResponse) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{7}
}

func (x *QueryKeysResponse) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *QueryKeysResponse) GetPagination() *PagingResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryMyKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address    string         `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Uuid       string         `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Pagination *PagingRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryMyKeysRequest) Reset() {
	*x = QueryMyKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMyKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMyKeysRequest) ProtoMessage() {}

func (x *QueryMyKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMyKeysRequest.ProtoReflect.Descriptor instead.
func (*QueryMyKeysRequest) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{8}
}

func (x *QueryMyKeysRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryMyKeysRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QueryMyKeysRequest) GetPagination() *PagingRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryMyKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys       []string        `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Pagination *PagingResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QueryMyKeysResponse) Reset() {
	*x = QueryMyKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMyKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMyKeysResponse) ProtoMessage() {}

func (x *QueryMyKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMyKeysResponse.ProtoReflect.Descriptor instead.
func (*QueryMyKeysResponse) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{9}
}

func (x *QueryMyKeysResponse) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *QueryMyKeysResponse) GetPagination() *PagingResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *QueryCountRequest) Reset() {
	*x = QueryCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCountRequest) ProtoMessage() {}

func (x *QueryCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCountRequest.ProtoReflect.Descriptor instead.
func (*QueryCountRequest) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{10}
}

func (x *QueryCountRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type QueryCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid  string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Count uint32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *QueryCountResponse) Reset() {
	*x = QueryCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCountResponse) ProtoMessage() {}

func (x *QueryCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCountResponse.ProtoReflect.Descriptor instead.
func (*QueryCountResponse) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{11}
}

func (x *QueryCountResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QueryCountResponse) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type QueryHasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *QueryHasRequest) Reset() {
	*x = QueryHasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHasRequest) ProtoMessage() {}

func (x *QueryHasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHasRequest.ProtoReflect.Descriptor instead.
func (*QueryHasRequest) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{12}
}

func (x *QueryHasRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QueryHasRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type QueryHasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Has bool `protobuf:"varint,1,opt,name=has,proto3" json:"has,omitempty"`
}

func (x *QueryHasResponse) Reset() {
	*x = QueryHasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHasResponse) ProtoMessage() {}

func (x *QueryHasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHasResponse.ProtoReflect.Descriptor instead.
func (*QueryHasResponse) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{13}
}

func (x *QueryHasResponse) GetHas() bool {
	if x != nil {
		return x.Has
	}
	return false
}

type QuerySearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string         `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SearchString string         `protobuf:"bytes,2,opt,name=searchString,proto3" json:"searchString,omitempty"`
	Pagination   *PagingRequest `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QuerySearchRequest) Reset() {
	*x = QuerySearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySearchRequest) ProtoMessage() {}

func (x *QuerySearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySearchRequest.ProtoReflect.Descriptor instead.
func (*QuerySearchRequest) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{14}
}

func (x *QuerySearchRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QuerySearchRequest) GetSearchString() string {
	if x != nil {
		return x.SearchString
	}
	return ""
}

func (x *QuerySearchRequest) GetPagination() *PagingRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QuerySearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyValues  []*KeyValue     `protobuf:"bytes,1,rep,name=keyValues,proto3" json:"keyValues,omitempty"`
	Pagination *PagingResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *QuerySearchResponse) Reset() {
	*x = QuerySearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySearchResponse) ProtoMessage() {}

func (x *QuerySearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySearchResponse.ProtoReflect.Descriptor instead.
func (*QuerySearchResponse) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{15}
}

func (x *QuerySearchResponse) GetKeyValues() []*KeyValue {
	if x != nil {
		return x.KeyValues
	}
	return nil
}

func (x *QuerySearchResponse) GetPagination() *PagingResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type QueryGetLeaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *QueryGetLeaseRequest) Reset() {
	*x = QueryGetLeaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetLeaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetLeaseRequest) ProtoMessage() {}

func (x *QueryGetLeaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetLeaseRequest.ProtoReflect.Descriptor instead.
func (*QueryGetLeaseRequest) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{16}
}

func (x *QueryGetLeaseRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QueryGetLeaseRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type QueryGetLeaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Seconds uint32 `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds,omitempty"`
}

func (x *QueryGetLeaseResponse) Reset() {
	*x = QueryGetLeaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetLeaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetLeaseResponse) ProtoMessage() {}

func (x *QueryGetLeaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetLeaseResponse.ProtoReflect.Descriptor instead.
func (*QueryGetLeaseResponse) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{17}
}

func (x *QueryGetLeaseResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QueryGetLeaseResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *QueryGetLeaseResponse) GetSeconds() uint32 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

type QueryGetNShortestLeasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Num  uint32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *QueryGetNShortestLeasesRequest) Reset() {
	*x = QueryGetNShortestLeasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetNShortestLeasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetNShortestLeasesRequest) ProtoMessage() {}

func (x *QueryGetNShortestLeasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetNShortestLeasesRequest.ProtoReflect.Descriptor instead.
func (*QueryGetNShortestLeasesRequest) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{18}
}

func (x *QueryGetNShortestLeasesRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QueryGetNShortestLeasesRequest) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type QueryGetNShortestLeasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string      `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	KeyLeases []*KeyLease `protobuf:"bytes,2,rep,name=keyLeases,proto3" json:"keyLeases,omitempty"`
}

func (x *QueryGetNShortestLeasesResponse) Reset() {
	*x = QueryGetNShortestLeasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crud_query_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGetNShortestLeasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGetNShortestLeasesResponse) ProtoMessage() {}

func (x *QueryGetNShortestLeasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crud_query_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGetNShortestLeasesResponse.ProtoReflect.Descriptor instead.
func (*QueryGetNShortestLeasesResponse) Descriptor() ([]byte, []int) {
	return file_crud_query_proto_rawDescGZIP(), []int{19}
}

func (x *QueryGetNShortestLeasesResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QueryGetNShortestLeasesResponse) GetKeyLeases() []*KeyLease {
	if x != nil {
		return x.KeyLeases
	}
	return nil
}

var File_crud_query_proto protoreflect.FileDescriptor

var file_crud_query_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72,
	0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x72, 0x75, 0x64, 0x2f,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38,
	0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x4d, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x70, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65,
	0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x01, 0x0a, 0x16, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c,
	0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c,
	0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x29, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6b, 0x0a,
	0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x6c, 0x75, 0x7a,
	0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x11, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c,
	0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x12, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x43,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x79, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x44,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x3e, 0x0a,
	0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x37, 0x0a,
	0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x24, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x68, 0x61, 0x73, 0x22, 0x91, 0x01, 0x0a,
	0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x99, 0x01, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6c,
	0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72,
	0x75, 0x64, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6c, 0x75,
	0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75,
	0x64, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x14,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x57, 0x0a, 0x15, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x46, 0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x4e,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x73, 0x0a, 0x1f, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x4e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x73, 0x74,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65,
	0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x4b, 0x65, 0x79,
	0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73,
	0x32, 0xa5, 0x0b, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x88, 0x01, 0x0a, 0x04, 0x52,
	0x65, 0x61, 0x64, 0x12, 0x26, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63,
	0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x6c,
	0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72,
	0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x62,
	0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2f, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2f, 0x63,
	0x72, 0x75, 0x64, 0x2f, 0x52, 0x65, 0x61, 0x64, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f,
	0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x12, 0x82, 0x01, 0x0a, 0x04, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x26,
	0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d,
	0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c,
	0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c,
	0x6c, 0x65, 0x2f, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2f, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x4b,
	0x65, 0x79, 0x73, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x8d, 0x01, 0x0a, 0x06, 0x4d,
	0x79, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x28, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65,
	0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x79, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x79, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x12, 0x26, 0x2f, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2f, 0x63, 0x75,
	0x72, 0x69, 0x75, 0x6d, 0x2f, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x4d, 0x79, 0x4b, 0x65, 0x79, 0x73,
	0x2f, 0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x12, 0x86, 0x01, 0x0a, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e,
	0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e,
	0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12,
	0x22, 0x2f, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2f, 0x63, 0x75, 0x72, 0x69, 0x75,
	0x6d, 0x2f, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x7b, 0x75, 0x75,
	0x69, 0x64, 0x7d, 0x12, 0x84, 0x01, 0x0a, 0x03, 0x48, 0x61, 0x73, 0x12, 0x25, 0x2e, 0x62, 0x6c,
	0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72,
	0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x12, 0x26, 0x2f, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2f, 0x63, 0x75,
	0x72, 0x69, 0x75, 0x6d, 0x2f, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x48, 0x61, 0x73, 0x2f, 0x7b, 0x75,
	0x75, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x12, 0x99, 0x01, 0x0a, 0x06, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x28, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65,
	0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x34, 0x12, 0x32, 0x2f, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2f, 0x63, 0x75,
	0x72, 0x69, 0x75, 0x6d, 0x2f, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x7d, 0x12, 0xc0, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4e, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x34, 0x2e,
	0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e,
	0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x4e, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63,
	0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x4e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x37, 0x12, 0x35, 0x2f, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2f, 0x63, 0x75,
	0x72, 0x69, 0x75, 0x6d, 0x2f, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x47, 0x65, 0x74, 0x4e, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x75,
	0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x6e, 0x75, 0x6d, 0x7d, 0x12, 0x98, 0x01, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x2a, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c,
	0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c,
	0x6c, 0x65, 0x2f, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2f, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x47,
	0x65, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x2f, 0x7b,
	0x6b, 0x65, 0x79, 0x7d, 0x12, 0x96, 0x01, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x2b, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75,
	0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b,
	0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75,
	0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65,
	0x2f, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2f, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x4b, 0x65, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2f, 0x7b, 0x75, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x59, 0x0a,
	0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x2e, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65,
	0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2e, 0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2e,
	0x63, 0x72, 0x75, 0x64, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c, 0x75, 0x7a, 0x65, 0x6c, 0x6c, 0x65, 0x2f,
	0x63, 0x75, 0x72, 0x69, 0x75, 0x6d, 0x2f, 0x78, 0x2f, 0x63, 0x72, 0x75, 0x64, 0x2f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crud_query_proto_rawDescOnce sync.Once
	file_crud_query_proto_rawDescData = file_crud_query_proto_rawDesc
)

func file_crud_query_proto_rawDescGZIP() []byte {
	file_crud_query_proto_rawDescOnce.Do(func() {
		file_crud_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_crud_query_proto_rawDescData)
	})
	return file_crud_query_proto_rawDescData
}

var file_crud_query_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_crud_query_proto_goTypes = []interface{}{
	(*QueryFileRequest)(nil),                // 0: bluzelle.curium.crud.QueryFileRequest
	(*QueryFileResponse)(nil),               // 1: bluzelle.curium.crud.QueryFileResponse
	(*QueryKeyValuesRequest)(nil),           // 2: bluzelle.curium.crud.QueryKeyValuesRequest
	(*QueryKeyValuesResponse)(nil),          // 3: bluzelle.curium.crud.QueryKeyValuesResponse
	(*QueryReadRequest)(nil),                // 4: bluzelle.curium.crud.QueryReadRequest
	(*QueryReadResponse)(nil),               // 5: bluzelle.curium.crud.QueryReadResponse
	(*QueryKeysRequest)(nil),                // 6: bluzelle.curium.crud.QueryKeysRequest
	(*QueryKeysResponse)(nil),               // 7: bluzelle.curium.crud.QueryKeysResponse
	(*QueryMyKeysRequest)(nil),              // 8: bluzelle.curium.crud.QueryMyKeysRequest
	(*QueryMyKeysResponse)(nil),             // 9: bluzelle.curium.crud.QueryMyKeysResponse
	(*QueryCountRequest)(nil),               // 10: bluzelle.curium.crud.QueryCountRequest
	(*QueryCountResponse)(nil),              // 11: bluzelle.curium.crud.QueryCountResponse
	(*QueryHasRequest)(nil),                 // 12: bluzelle.curium.crud.QueryHasRequest
	(*QueryHasResponse)(nil),                // 13: bluzelle.curium.crud.QueryHasResponse
	(*QuerySearchRequest)(nil),              // 14: bluzelle.curium.crud.QuerySearchRequest
	(*QuerySearchResponse)(nil),             // 15: bluzelle.curium.crud.QuerySearchResponse
	(*QueryGetLeaseRequest)(nil),            // 16: bluzelle.curium.crud.QueryGetLeaseRequest
	(*QueryGetLeaseResponse)(nil),           // 17: bluzelle.curium.crud.QueryGetLeaseResponse
	(*QueryGetNShortestLeasesRequest)(nil),  // 18: bluzelle.curium.crud.QueryGetNShortestLeasesRequest
	(*QueryGetNShortestLeasesResponse)(nil), // 19: bluzelle.curium.crud.QueryGetNShortestLeasesResponse
	(*PagingRequest)(nil),                   // 20: bluzelle.curium.crud.PagingRequest
	(*KeyValue)(nil),                        // 21: bluzelle.curium.crud.KeyValue
	(*PagingResponse)(nil),                  // 22: bluzelle.curium.crud.PagingResponse
	(*KeyLease)(nil),                        // 23: bluzelle.curium.crud.KeyLease
}
var file_crud_query_proto_depIdxs = []int32{
	20, // 0: bluzelle.curium.crud.QueryKeyValuesRequest.pagination:type_name -> bluzelle.curium.crud.PagingRequest
	21, // 1: bluzelle.curium.crud.QueryKeyValuesResponse.keyValues:type_name -> bluzelle.curium.crud.KeyValue
	22, // 2: bluzelle.curium.crud.QueryKeyValuesResponse.pagination:type_name -> bluzelle.curium.crud.PagingResponse
	20, // 3: bluzelle.curium.crud.QueryKeysRequest.pagination:type_name -> bluzelle.curium.crud.PagingRequest
	22, // 4: bluzelle.curium.crud.QueryKeysResponse.pagination:type_name -> bluzelle.curium.crud.PagingResponse
	20, // 5: bluzelle.curium.crud.QueryMyKeysRequest.pagination:type_name -> bluzelle.curium.crud.PagingRequest
	22, // 6: bluzelle.curium.crud.QueryMyKeysResponse.pagination:type_name -> bluzelle.curium.crud.PagingResponse
	20, // 7: bluzelle.curium.crud.QuerySearchRequest.pagination:type_name -> bluzelle.curium.crud.PagingRequest
	21, // 8: bluzelle.curium.crud.QuerySearchResponse.keyValues:type_name -> bluzelle.curium.crud.KeyValue
	22, // 9: bluzelle.curium.crud.QuerySearchResponse.pagination:type_name -> bluzelle.curium.crud.PagingResponse
	23, // 10: bluzelle.curium.crud.QueryGetNShortestLeasesResponse.keyLeases:type_name -> bluzelle.curium.crud.KeyLease
	4,  // 11: bluzelle.curium.crud.Query.Read:input_type -> bluzelle.curium.crud.QueryReadRequest
	6,  // 12: bluzelle.curium.crud.Query.Keys:input_type -> bluzelle.curium.crud.QueryKeysRequest
	8,  // 13: bluzelle.curium.crud.Query.MyKeys:input_type -> bluzelle.curium.crud.QueryMyKeysRequest
	10, // 14: bluzelle.curium.crud.Query.Count:input_type -> bluzelle.curium.crud.QueryCountRequest
	12, // 15: bluzelle.curium.crud.Query.Has:input_type -> bluzelle.curium.crud.QueryHasRequest
	14, // 16: bluzelle.curium.crud.Query.Search:input_type -> bluzelle.curium.crud.QuerySearchRequest
	18, // 17: bluzelle.curium.crud.Query.GetNShortestLeases:input_type -> bluzelle.curium.crud.QueryGetNShortestLeasesRequest
	16, // 18: bluzelle.curium.crud.Query.GetLease:input_type -> bluzelle.curium.crud.QueryGetLeaseRequest
	2,  // 19: bluzelle.curium.crud.Query.KeyValues:input_type -> bluzelle.curium.crud.QueryKeyValuesRequest
	0,  // 20: bluzelle.curium.crud.Query.File:input_type -> bluzelle.curium.crud.QueryFileRequest
	5,  // 21: bluzelle.curium.crud.Query.Read:output_type -> bluzelle.curium.crud.QueryReadResponse
	7,  // 22: bluzelle.curium.crud.Query.Keys:output_type -> bluzelle.curium.crud.QueryKeysResponse
	9,  // 23: bluzelle.curium.crud.Query.MyKeys:output_type -> bluzelle.curium.crud.QueryMyKeysResponse
	11, // 24: bluzelle.curium.crud.Query.Count:output_type -> bluzelle.curium.crud.QueryCountResponse
	13, // 25: bluzelle.curium.crud.Query.Has:output_type -> bluzelle.curium.crud.QueryHasResponse
	15, // 26: bluzelle.curium.crud.Query.Search:output_type -> bluzelle.curium.crud.QuerySearchResponse
	19, // 27: bluzelle.curium.crud.Query.GetNShortestLeases:output_type -> bluzelle.curium.crud.QueryGetNShortestLeasesResponse
	17, // 28: bluzelle.curium.crud.Query.GetLease:output_type -> bluzelle.curium.crud.QueryGetLeaseResponse
	3,  // 29: bluzelle.curium.crud.Query.KeyValues:output_type -> bluzelle.curium.crud.QueryKeyValuesResponse
	1,  // 30: bluzelle.curium.crud.Query.File:output_type -> bluzelle.curium.crud.QueryFileResponse
	21, // [21:31] is the sub-list for method output_type
	11, // [11:21] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_crud_query_proto_init() }
func file_crud_query_proto_init() {
	if File_crud_query_proto != nil {
		return
	}
	file_crud_Paging_proto_init()
	file_crud_KeyValue_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_crud_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryKeyValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryKeyValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMyKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMyKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetLeaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetLeaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetNShortestLeasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crud_query_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGetNShortestLeasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crud_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crud_query_proto_goTypes,
		DependencyIndexes: file_crud_query_proto_depIdxs,
		MessageInfos:      file_crud_query_proto_msgTypes,
	}.Build()
	File_crud_query_proto = out.File
	file_crud_query_proto_rawDesc = nil
	file_crud_query_proto_goTypes = nil
	file_crud_query_proto_depIdxs = nil
}
